FROM ${BASE_IMAGE}

ARG db_password
ARG rabbitmq_password
ARG PACKAGE_LINK
ARG WHEELS_LINK
ARG OPENVINO_OPENCV_DOWNLOAD_SERVER
ARG google_analytics_id

ENV DEBIAN_FRONTEND noninteractive
ENV ACCURACY_CHECKER_LOG_LEVEL ERROR
ENV GIT_PYTHON_REFRESH quiet

ENV RABBITMQ_PASSWORD $rabbitmq_password
ENV OPENVINO_WORKBENCH_ROOT ${INTEL_OPENVINO_DIR}/tools/workbench
ENV WHEELS_PATH ${OPENVINO_WORKBENCH_ROOT}/wheels
ENV OPENVINO_WORKBENCH_DATA_PATH ${OPENVINO_WORKBENCH_ROOT}/wb/data
ENV PYTHONPATH ${PYTHONPATH}:${OPENVINO_WORKBENCH_ROOT}:${OPENVINO_WORKBENCH_ROOT}/model_analyzer:${INTEL_OPENVINO_DIR}/tools/benchmark_tool

ENV USER_NAME workbench
ENV USER_ID 5665
ENV GROUP_NAME ${USER_NAME}
ENV GROUP_ID ${USER_ID}

ENV DB_PASSWORD $db_password
ENV DB_USER ${USER_NAME}
ENV DB_NAME workbench
ENV GOOGLE_ANALYTICS_ID ${google_analytics_id}

USER root

RUN groupadd -g ${GROUP_ID} ${GROUP_NAME}
RUN useradd ${USER_NAME} -u ${USER_ID} -g ${GROUP_ID} -ms /bin/bash  && \
    chown ${USER_NAME} -R /home/${USER_NAME}

ENV WORKBENCH_PUBLIC_DIR /home/${USER_NAME}/.workbench
ENV WORKBENCH_POSTGRESQL_DATA_DIR ${WORKBENCH_PUBLIC_DIR}/postgresql_data_directory
ENV JUPYTER_BASE_DIR /home/${USER_NAME}/.jupyter
ENV JUPYTER_USER_SETTINGS_DIR ${JUPYTER_BASE_DIR}/lab/user-settings
ENV JUPYTER_TUTORIALS_DIR ${WORKBENCH_PUBLIC_DIR}/tutorials
ENV NOTEBOOKS_VENV ${OPENVINO_WORKBENCH_DATA_PATH}/jupyter_env

ENV DEPENDENCIES " \
    postgresql-10 \
    rabbitmq-server \
    nginx \
    gettext-base \
    unzip \
    dpkg-dev \
    git \
"

# Preparing
RUN apt update && \
    apt install -y --no-install-recommends gnupg && \
    curl -L https://www.postgresql.org/media/keys/ACCC4CF8.asc -s | apt-key add - && \
    echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" | tee /etc/apt/sources.list.d/postgresql.list && \
    apt remove -y gnupg && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

RUN sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list && \
    apt update && \
    apt install -y --no-install-recommends ${DEPENDENCIES} && \
    apt source gettext-base && \
    apt remove -y dpkg-dev && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install pip==19.3.1

# CREATE DIRECTORY FOR PUBLIC WORKBENCH ARTIFACTS
RUN mkdir -m 777 -p ${WORKBENCH_PUBLIC_DIR} && chown -R ${USER_NAME} ${WORKBENCH_PUBLIC_DIR}

# CREATE DIRECTORY FOR WHEELS
RUN mkdir -m 777 -p ${WHEELS_PATH} && chown -R ${USER_NAME} ${WHEELS_PATH}

WORKDIR ${INTEL_OPENVINO_DIR}/tools
RUN rm -rf ${OPENVINO_WORKBENCH_ROOT}
ADD --chown=workbench workbench ${OPENVINO_WORKBENCH_ROOT}/

# DOWNLOAD OPENCV
RUN echo $OPENVINO_OPENCV_DOWNLOAD_SERVER && ${INTEL_OPENVINO_DIR}/extras/scripts/download_opencv.sh

# COPY JUPYTER USER SETTINGS
COPY --chown=workbench workbench/docker/jupyter_config/user-settings ${JUPYTER_USER_SETTINGS_DIR}

RUN python3 -m pip install --no-cache-dir -r ${OPENVINO_WORKBENCH_ROOT}/requirements/requirements.txt && \
    python3 -m pip install --no-cache-dir -r ${OPENVINO_WORKBENCH_ROOT}/requirements/requirements_jupyter.txt && \
    python3 -m pip install --no-cache-dir -r ${OPENVINO_WORKBENCH_ROOT}/model_analyzer/requirements.txt

RUN chown -R ${USER_NAME}:${GROUP_NAME} ${JUPYTER_BASE_DIR}

RUN xargs -n 1 curl -O < ${OPENVINO_WORKBENCH_ROOT}/docker/docker_python_lgpl.txt

# Add ${USER_NAME} user to groups nginx, postgres and rabbitmq for running
# services without sudo
RUN for g in $(id -nG postgres); do gpasswd -a ${USER_NAME} ${g}; done && \
    for g in $(id -nG rabbitmq); do gpasswd -a ${USER_NAME} ${g}; done && \
    gpasswd -a ${USER_NAME} users && \
    gpasswd -a ${USER_NAME} video && \
    gpasswd -a ${USER_NAME} adm

RUN touch /var/run/nginx.pid && \
    rm -rf /etc/nginx/sites-enabled/default && \
    cp  ${OPENVINO_WORKBENCH_ROOT}/nginx/nginx.conf /etc/nginx/nginx.conf

RUN chown -R ${USER_NAME} /var/lib/postgresql /var/run/postgresql \
                          /var/lib/rabbitmq /var/log/rabbitmq /var/log/rabbitmq \
                          /var/log/nginx /var/lib/nginx /var/run/nginx.pid /etc/nginx

USER workbench

WORKDIR ${OPENVINO_WORKBENCH_ROOT}

RUN python3 ${OPENVINO_WORKBENCH_ROOT}/wb/main/utils/bundle_creator/bundle_downloader.py \
                        --link ${PACKAGE_LINK} \
                        -os ubuntu18 ubuntu20 \
                        --output-path ${OPENVINO_WORKBENCH_ROOT}/bundles \
                        --targets cpu gpu hddl opencv python3.6 python3.7 python3.8 vpu

RUN python3 ${OPENVINO_WORKBENCH_ROOT}/wb/main/utils/wheel_downloader.py \
                        --link ${WHEELS_LINK} \
                        --output-path ${WHEELS_PATH}

RUN ${OPENVINO_WORKBENCH_ROOT}/docker/scripts/configure_ov_notebooks_env.sh --notebooks_venv ${NOTEBOOKS_VENV}

ENTRYPOINT ["bash", "/opt/intel/openvino_2022/tools/workbench/docker/scripts/docker-entrypoint.sh"]
