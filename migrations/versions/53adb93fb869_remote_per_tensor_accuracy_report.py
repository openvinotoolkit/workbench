"""Remote per-tensor accuracy report

Revision ID: 53adb93fb869
Revises: 7f9788668528
Create Date: 2021-10-20 18:18:39.480957

"""

"""
 OpenVINO DL Workbench
 Migration: Remote per-tensor accuracy report

 Copyright (c) 2021 Intel Corporation

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
"""


from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from migrations.utils import SQLEnumMigrator

revision = '53adb93fb869'
down_revision = '7f9788668528'
branch_labels = None
depends_on = None


old_pipeline_types = (
    'local_accuracy',
    'remote_accuracy',
    'dev_cloud_accuracy',
    'remote_profiling',
    'local_profiling',
    'dev_cloud_profiling',
    'local_int8_calibration',
    'remote_int8_calibration',
    'dev_cloud_int8_calibration',
    'create_profiling_bundle',
    'download_log',
    'download_model',
    'deployment_manager',
    'export_project',
    'setup',
    'ping',
    'inference_test_image',
    'generate_dataset',
    'upload_dataset',
    'upload_model',
    'download_omz_model',
    'export_project_report',
    'export_inference_report',
    'local_winograd_tuning',
    'per_tensor_report',
    'predictions_relative_accuracy_report',
)

temp_pipeline_types = tuple((*old_pipeline_types, 'local_per_tensor_report', 'remote_per_tensor_report'))

tmp_pipeline_type_enum_migrator = SQLEnumMigrator(
    table_column_pairs=(('pipelines', 'type'),),
    enum_name='pipelinetypeenum',
    from_types=old_pipeline_types,
    to_types=temp_pipeline_types
)

new_pipeline_types = list(set(temp_pipeline_types) - {'per_tensor_report'})

pipeline_type_enum_migrator = SQLEnumMigrator(
    table_column_pairs=(('pipelines', 'type'),),
    enum_name='pipelinetypeenum',
    from_types=temp_pipeline_types,
    to_types=tuple(new_pipeline_types)
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('create_per_tensor_scripts_jobs',
        sa.Column('job_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['job_id'], ['jobs.job_id'], ),
        sa.PrimaryKeyConstraint('job_id')
    )
    op.create_table('create_per_tensor_bundle_jobs',
        sa.Column('job_id', sa.Integer(), nullable=False),
        sa.Column('bundle_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['bundle_id'], ['downloadable_artifacts.id'], ),
        sa.ForeignKeyConstraint(['job_id'], ['jobs.job_id'], ),
        sa.PrimaryKeyConstraint('job_id')
    )
    # ### end Alembic commands ###

    tmp_pipeline_type_enum_migrator.upgrade()
    op.execute("UPDATE pipelines SET type='local_per_tensor_report' WHERE type='per_tensor_report'")
    pipeline_type_enum_migrator.upgrade()


def downgrade():
    raise NotImplementedError(f'Downgrade is not implemented for the {revision} migration')
