"""Per tensor report

Revision ID: d2d867318568
Revises: 424ed0531227
Create Date: 2021-07-06 19:40:14.239700

"""

"""
 OpenVINO DL Workbench
 Migration: Add per tensor report job

 Copyright (c) 2021 Intel Corporation

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from migrations.utils import SQLEnumMigrator

revision = 'd2d867318568'
down_revision = '424ed0531227'
branch_labels = None
depends_on = None

old_pipeline_stages = (
    'accuracy',
    'preparing_setup_assets',
    'uploading_setup_assets',
    'configuring_environment',
    'collecting_available_devices',
    'collecting_system_information',
    'preparing_profiling_assets',
    'preparing_int8_calibration_assets',
    'profiling',
    'getting_remote_job_result',
    'download_log',
    'int8_calibration',
    'remote_int8_calibration',
    'model_analyzer',
    'generate_dataset',
    'wait_dataset_upload',
    'extract_dataset',
    'recognize_dataset',
    'validate_dataset',
    'export_project_report',
    'export_inference_report',
    'inference_test_image',
    'winograd_tuning',
    'export_project',
    'model_optimizer_scan',
    'convert_model',
    'convert_keras_model',
    'wait_model_upload',
    'download_omz_model',
    'convert_omz_model',
    'move_omz_model',
    'augment_dataset',
    'setup_environment',
    'annotate_dataset'
)

new_pipeline_stages = (
    *old_pipeline_stages,
    'per_tensor_report'
)

old_pipeline_types = (
    'accuracy',
    'remote_profiling',
    'local_profiling',
    'dev_cloud_profiling',
    'local_int8_calibration',
    'remote_int8_calibration',
    'dev_cloud_int8_calibration',
    'create_profiling_bundle',
    'download_log',
    'download_model',
    'deployment_manager',
    'setup',
    'ping',
    'inference_test_image',
    'generate_dataset',
    'upload_dataset',
    'export_project_report',
    'export_inference_report',
    'local_winograd_tuning',
    'export_project',
    'upload_model',
    'download_omz_model',
    'annotate_dataset',
)

new_pipeline_types = (
    *old_pipeline_types,
    'per_tensor_report'
)
pipeline_type_migrator = SQLEnumMigrator(
    table_column_pairs=(('pipelines', 'type'),),
    enum_name='pipelinetypeenum',
    from_types=old_pipeline_types,
    to_types=new_pipeline_types)
pipeline_stage_migrator = SQLEnumMigrator(
    table_column_pairs=(('job_execution_details', 'stage'),),
    enum_name='pipelinestageenum',
    from_types=old_pipeline_stages,
    to_types=new_pipeline_stages)


def upgrade():
    # migrate enums
    pipeline_type_migrator.upgrade()
    pipeline_stage_migrator.upgrade()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('per_tensor_report_jobs',
                    sa.Column('job_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['job_id'], ['jobs.job_id'], ),
                    sa.PrimaryKeyConstraint('job_id'),
                    sa.Column('per_tensor_report', sa.Text(), nullable=True)
                    )

    # ### end Alembic commands ###


def downgrade():
    raise NotImplementedError('downgrade is not supported')
